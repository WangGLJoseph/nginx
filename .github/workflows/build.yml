name: check-pr

on:
  workflow_call:

jobs:
  build-and-test-and-analyze:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed

    steps:
      - name: checkout v4
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Check out nginx tests
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: nginx/nginx-tests
          path: nginx-tests

      - name: Install build and test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            libedit-dev \
            libgd-dev \
            libgeoip-dev \
            libpcre2-dev \
            libperl-dev \
            libssl-dev \
            libxml2-dev \
            libxslt1-dev \
            zlib1g-dev \
            ffmpeg \
            libcache-memcached-perl \
            libcryptx-perl \
            libgd-perl \
            libio-socket-ssl-perl \
            libtest-harness-perl \
            libprotocol-websocket-perl \
            libscgi-perl \
            uwsgi \
            uwsgi-plugin-python3
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v3
      - name: Configure
        run: |
          mkdir -p t
          export DEB_BUILD_MAINT_OPTIONS="hardening=+all"
          export DEB_CFLAGS_MAINT_APPEND="-Wp,-D_FORTIFY_SOURCE=2 -fPIC"
          export DEB_LDFLAGS_MAINT_APPEND=""-Wl,--as-needed""
          auto/configure \
            --prefix=/tmp \
            --with-http_ssl_module \
            --with-http_realip_module \
            --with-http_addition_module \
            --with-http_sub_module \
            --with-http_dav_module \
            --with-http_flv_module \
            --with-http_mp4_module \
            --with-http_gunzip_module \
            --with-http_gzip_static_module \
            --with-http_random_index_module \
            --with-http_secure_link_module \
            --with-http_stub_status_module \
            --with-mail \
            --with-mail_ssl_module \
            --with-select_module \
            --with-poll_module \
            --with-http_auth_request_module \
            --with-http_v2_module \
            --with-http_slice_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-stream_ssl_preread_module \
            --with-stream_realip_module \
            --with-threads \
            --with-compat \
            --with-cpp_test_module \
            --with-http_perl_module \
            --with-http_xslt_module \
            --with-http_image_filter_module \
            --with-http_degradation_module \
            --with-http_v3_module \
            --with-http_geoip_module \
            --with-stream_geoip_module \
            --with-cc-opt="$(dpkg-buildflags --get CFLAGS)" \
            --with-ld-opt="$(dpkg-buildflags --get LDFLAGS)" \
          || cat objs/autoconf.err
      - name: Run build-wrapper
        id: build
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make -j$(nproc) -k || make > error.log 2>&1

      - name: Upload Build Log
        if: ${{ failure() && steps.build.outcome == 'failure'}}
        uses: actions/upload-artifact@v4
        with:
          name: error_log
          path: error.log
      - name: Run sonar-scanner
        id: analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json" > error.log 2>&1

      - name: Upload Sonar Log
        if: ${{ failure() && steps.analysis.outcome == 'failure'}}
        uses: actions/upload-artifact@v4
        with:
          name: error_log
          path: error.log
      - name: Test
        id: test
        working-directory: nginx-tests
        run: |
          prove -v -j$(nproc) --state=save ../t . || prove -v --state=failed > error.log 2>&1
        env:
          TEST_NGINX_BINARY: "${{ github.workspace }}/objs/nginx"
          TEST_NGINX_VERBOSE: 1
          PERL5LIB: "${{ github.workspace }}/nginx-tests/lib"

      - name: Upload Test Log
        if: ${{ failure() && steps.test.outcome == 'failure'}}
        uses: actions/upload-artifact@v4
        with:
          name: error_log
          path: error.log


  repair:
      needs: build-and-test-and-analyze
      if: failure()
      uses: ./.github/workflows/acr.yml
      secrets: inherit
      with:
        artifact: build_log
        filename: build.log